Source: http://www.macosxhints.com/article.php?story=20070517224112286
---------------------------


I have a PowerBook that I move between various networks. Some of these networks have different proxy settings -- see this hint for how that can be handled.I also had the problem that I wanted NTP to be working, and some of these networks were filtering the ntp packets. It is possible to set /etc/ntp.conf, just like a standard unix ntp daemon. Unfortunately, ntpd will decide that a bunch of the time servers are unreachable, and will stop trying. When you wake your Mac on another network, ntp will lose contact with its last servers, decide it can't do anything, and shut itself down. So I wanted to kick ntpd when I connected to a new network.The first step was to add iburst commands to the ntp setup, and to decide that SystemStarter restart "Network Time", when run as root, would restart ntpd. I then needed a way to get ntp to be kicked when my network config changed. I found the solution to that in this blog posting: Apple's System Configuration framework keeps track of network connections and when they change. This can be accessed through the scutil command.Initially I found scutil difficult to use. The man page is horrible, but if you run scuti and then type help at its prompt, then you get a better list of commands.In particular, you can try this:   1. Run scutil   2. Type list for a list of things you can watch   3. Type get State:/Network/Global/IPv4 and then d.show to see the current IPv4 state   4. Type n.add State:/Network/Global/IPv4 and then n.watch to set a watch on the IPv4 state   5. Now unplug and re-plug your network cable and watch it tell you all about itSo, how do I make my script run when this changes? It turns out that there is a daemon already there that watches these events and does stuff as needed. It's called kicker, and you can see it's config file here: /System È Library È SystemConfiguration È Kicker.bundle È Contents È Resources È Kicker.xml. Note that it already has a script that it runs on network change: /System È Library È SystemConfiguration È Kicker.bundle È Contents È Resources È enable-network. Note that this script has changed names with different versions of Mac OS X.Interestingly, there is already something there to start NetworkTime:/System/Library/StartupItems/NetworkTime/NetworkTime startThe problem is that it tries to start network time and not restart network time. So if the ntp daemon is already running, it won't be touched. Changing the command to restart ntpd solved my problem:/System/Library/StartupItems/NetworkTime/NetworkTime restartThis works in both cases, because restart will also start a daemon if it's not presently running. But the general method of running a script on network change looked useful for others, so I thought I'd post in the information.